

================================================================
== Vivado HLS Report for 'global_memory'
================================================================
* Date:           Sun Dec 16 15:45:59 2018

* Version:        2017.2 (Build 1909853 on Thu Jun 15 18:55:24 MDT 2017)
* Project:        global_memory
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.59|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    7|   13|    8|   14|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |    6|   12|   3 ~ 6  |          -|          -|     2|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 7
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond1)
3 --> 
	4  / (mem_interfaces_req_V_2)
	7  / (!mem_interfaces_req_V_2)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	2  / true
* FSM state operations: 

 <State 1>: 1.59ns
ST_1: StgValue_8 (7)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([2 x i32]* %mem_interfaces_request_address), !map !47

ST_1: StgValue_9 (8)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap([2 x i32]* %mem_interfaces_request_data), !map !53

ST_1: StgValue_10 (9)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap([2 x i2]* %mem_interfaces_request_op_V), !map !57

ST_1: StgValue_11 (10)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap([2 x i32]* %mem_interfaces_result), !map !61

ST_1: StgValue_12 (11)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap([2 x i1]* %mem_interfaces_ack_V), !map !65

ST_1: StgValue_13 (12)  [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap([2 x i1]* %mem_interfaces_req_V), !map !69

ST_1: StgValue_14 (13)  [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecTopModule([14 x i8]* @global_memory_str) nounwind

ST_1: global_memory_1 (14)  [1/1] 0.00ns  loc: global_memory.cpp:5
:7  %global_memory_1 = alloca [1024 x i32], align 16

ST_1: StgValue_16 (15)  [1/1] 1.59ns  loc: global_memory.cpp:10
:8  br label %1


 <State 2>: 2.32ns
ST_2: i (17)  [1/1] 0.00ns
:0  %i = phi i2 [ 0, %0 ], [ %i_1, %._crit_edge ]

ST_2: exitcond1 (18)  [1/1] 2.07ns  loc: global_memory.cpp:10
:1  %exitcond1 = icmp eq i2 %i, -2

ST_2: empty (19)  [1/1] 0.00ns
:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2)

ST_2: i_1 (20)  [1/1] 2.17ns  loc: global_memory.cpp:10
:3  %i_1 = add i2 %i, 1

ST_2: StgValue_21 (21)  [1/1] 0.00ns  loc: global_memory.cpp:10
:4  br i1 %exitcond1, label %.preheader.preheader_ifconv, label %2

ST_2: tmp (23)  [1/1] 0.00ns  loc: global_memory.cpp:14
:0  %tmp = zext i2 %i to i64

ST_2: mem_interfaces_req_V_1 (24)  [1/1] 0.00ns  loc: global_memory.cpp:14
:1  %mem_interfaces_req_V_1 = getelementptr [2 x i1]* %mem_interfaces_req_V, i64 0, i64 %tmp

ST_2: mem_interfaces_req_V_2 (25)  [2/2] 2.32ns  loc: global_memory.cpp:14
:2  %mem_interfaces_req_V_2 = load i1* %mem_interfaces_req_V_1, align 1

ST_2: StgValue_25 (63)  [1/1] 0.00ns  loc: global_memory.cpp:64
.preheader.preheader_ifconv:0  ret void


 <State 3>: 2.32ns
ST_3: mem_interfaces_req_V_2 (25)  [1/2] 2.32ns  loc: global_memory.cpp:14
:2  %mem_interfaces_req_V_2 = load i1* %mem_interfaces_req_V_1, align 1

ST_3: StgValue_27 (26)  [1/1] 0.00ns  loc: global_memory.cpp:14
:3  br i1 %mem_interfaces_req_V_2, label %_ifconv, label %._crit_edge

ST_3: mem_interfaces_reque (28)  [1/1] 0.00ns  loc: global_memory.cpp:16
_ifconv:0  %mem_interfaces_reque = getelementptr [2 x i32]* %mem_interfaces_request_address, i64 0, i64 %tmp

ST_3: request_address (29)  [2/2] 2.32ns  loc: global_memory.cpp:16
_ifconv:1  %request_address = load i32* %mem_interfaces_reque, align 4


 <State 4>: 5.58ns
ST_4: request_address (29)  [1/2] 2.32ns  loc: global_memory.cpp:16
_ifconv:1  %request_address = load i32* %mem_interfaces_reque, align 4

ST_4: mem_interfaces_reque_1 (30)  [1/1] 0.00ns  loc: global_memory.cpp:16
_ifconv:2  %mem_interfaces_reque_1 = getelementptr [2 x i32]* %mem_interfaces_request_data, i64 0, i64 %tmp

ST_4: request_data (31)  [2/2] 2.32ns  loc: global_memory.cpp:16
_ifconv:3  %request_data = load i32* %mem_interfaces_reque_1, align 4

ST_4: mem_interfaces_reque_2 (32)  [1/1] 0.00ns  loc: global_memory.cpp:16
_ifconv:4  %mem_interfaces_reque_2 = getelementptr [2 x i2]* %mem_interfaces_request_op_V, i64 0, i64 %tmp

ST_4: request_op_V (33)  [2/2] 2.32ns  loc: global_memory.cpp:16
_ifconv:5  %request_op_V = load i2* %mem_interfaces_reque_2, align 1

ST_4: tmp_1 (36)  [1/1] 0.00ns  loc: global_memory.cpp:30
_ifconv:8  %tmp_1 = sext i32 %request_address to i64

ST_4: global_memory_addr (37)  [1/1] 0.00ns  loc: global_memory.cpp:30
_ifconv:9  %global_memory_addr = getelementptr inbounds [1024 x i32]* %global_memory_1, i64 0, i64 %tmp_1

ST_4: result_7 (38)  [2/2] 3.25ns  loc: global_memory.cpp:30
_ifconv:10  %result_7 = load i32* %global_memory_addr, align 4


 <State 5>: 8.59ns
ST_5: request_data (31)  [1/2] 2.32ns  loc: global_memory.cpp:16
_ifconv:3  %request_data = load i32* %mem_interfaces_reque_1, align 4

ST_5: request_op_V (33)  [1/2] 2.32ns  loc: global_memory.cpp:16
_ifconv:5  %request_op_V = load i2* %mem_interfaces_reque_2, align 1

ST_5: result_7 (38)  [1/2] 3.25ns  loc: global_memory.cpp:30
_ifconv:10  %result_7 = load i32* %global_memory_addr, align 4

ST_5: tmp_6 (40)  [1/1] 3.26ns  loc: global_memory.cpp:37
_ifconv:12  %tmp_6 = icmp sgt i32 %result_7, %request_data

ST_5: result_2 (42)  [1/1] 0.00ns  loc: global_memory.cpp:38 (grouped into LUT with out node result_4)
_ifconv:14  %result_2 = select i1 %tmp_6, i32 %result_7, i32 %request_data

ST_5: sel_tmp (43)  [1/1] 2.07ns  loc: global_memory.cpp:16
_ifconv:15  %sel_tmp = icmp eq i2 %request_op_V, -1

ST_5: result_4 (44)  [1/1] 2.07ns  loc: global_memory.cpp:16 (out node of the LUT)
_ifconv:16  %result_4 = select i1 %sel_tmp, i32 %result_2, i32 %result_7

ST_5: sel_tmp2 (45)  [1/1] 2.07ns  loc: global_memory.cpp:16
_ifconv:17  %sel_tmp2 = icmp eq i2 %request_op_V, -2

ST_5: sel_tmp4 (47)  [1/1] 2.07ns  loc: global_memory.cpp:16
_ifconv:19  %sel_tmp4 = icmp eq i2 %request_op_V, 1


 <State 6>: 8.22ns
ST_6: result (39)  [1/1] 2.90ns  loc: global_memory.cpp:36
_ifconv:11  %result = add nsw i32 %result_7, %request_data

ST_6: request_data_2 (41)  [1/1] 0.00ns  loc: global_memory.cpp:37 (grouped into LUT with out node result_5)
_ifconv:13  %request_data_2 = select i1 %tmp_6, i32 %request_data, i32 %result_7

ST_6: result_5 (46)  [1/1] 2.07ns  loc: global_memory.cpp:16 (out node of the LUT)
_ifconv:18  %result_5 = select i1 %sel_tmp2, i32 %request_data_2, i32 %result_4

ST_6: result_6 (48)  [1/1] 2.07ns  loc: global_memory.cpp:16 (out node of the LUT)
_ifconv:20  %result_6 = select i1 %sel_tmp4, i32 %result, i32 %result_5

ST_6: StgValue_51 (49)  [1/1] 3.25ns  loc: global_memory.cpp:44
_ifconv:21  store i32 %result_6, i32* %global_memory_addr, align 4


 <State 7>: 2.32ns
ST_7: tmp_2 (34)  [1/1] 0.00ns  loc: global_memory.cpp:25
_ifconv:6  %tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str6)

ST_7: StgValue_53 (35)  [1/1] 0.00ns  loc: global_memory.cpp:26
_ifconv:7  call void (...)* @_ssdm_op_SpecProtocol(i32 1, [1 x i8]* @p_str7) nounwind

ST_7: empty_3 (50)  [1/1] 0.00ns  loc: global_memory.cpp:45
_ifconv:22  %empty_3 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str6, i32 %tmp_2)

ST_7: tmp_4 (51)  [1/1] 0.00ns  loc: global_memory.cpp:47
_ifconv:23  %tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str11)

ST_7: StgValue_56 (52)  [1/1] 0.00ns  loc: global_memory.cpp:48
_ifconv:24  call void (...)* @_ssdm_op_SpecProtocol(i32 1, [1 x i8]* @p_str7) nounwind

ST_7: mem_interfaces_resul (53)  [1/1] 0.00ns  loc: global_memory.cpp:51
_ifconv:25  %mem_interfaces_resul = getelementptr [2 x i32]* %mem_interfaces_result, i64 0, i64 %tmp

ST_7: StgValue_58 (54)  [1/1] 2.32ns  loc: global_memory.cpp:51
_ifconv:26  store i32 %result_6, i32* %mem_interfaces_resul, align 4

ST_7: mem_interfaces_ack_V_1 (55)  [1/1] 0.00ns  loc: global_memory.cpp:52
_ifconv:27  %mem_interfaces_ack_V_1 = getelementptr [2 x i1]* %mem_interfaces_ack_V, i64 0, i64 %tmp

ST_7: StgValue_60 (56)  [1/1] 0.00ns  loc: global_memory.cpp:53
_ifconv:28  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_7: StgValue_61 (57)  [1/1] 2.32ns  loc: global_memory.cpp:54
_ifconv:29  store i1 false, i1* %mem_interfaces_ack_V_1, align 1

ST_7: empty_4 (58)  [1/1] 0.00ns  loc: global_memory.cpp:55
_ifconv:30  %empty_4 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str11, i32 %tmp_4)

ST_7: StgValue_63 (59)  [1/1] 0.00ns  loc: global_memory.cpp:56
_ifconv:31  br label %._crit_edge

ST_7: StgValue_64 (61)  [1/1] 0.00ns  loc: global_memory.cpp:10
._crit_edge:0  br label %1



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', global_memory.cpp:10) [17]  (1.59 ns)

 <State 2>: 2.32ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', global_memory.cpp:10) [17]  (0 ns)
	'getelementptr' operation ('mem_interfaces_req_V_1', global_memory.cpp:14) [24]  (0 ns)
	'load' operation ('mem_interfaces_req_V_2', global_memory.cpp:14) on array 'mem_interfaces_req_V' [25]  (2.32 ns)

 <State 3>: 2.32ns
The critical path consists of the following:
	'load' operation ('mem_interfaces_req_V_2', global_memory.cpp:14) on array 'mem_interfaces_req_V' [25]  (2.32 ns)

 <State 4>: 5.58ns
The critical path consists of the following:
	'load' operation ('request.address', global_memory.cpp:16) on array 'mem_interfaces_request_address' [29]  (2.32 ns)
	'getelementptr' operation ('global_memory_addr', global_memory.cpp:30) [37]  (0 ns)
	'load' operation ('result', global_memory.cpp:30) on array 'global_memory', global_memory.cpp:5 [38]  (3.25 ns)

 <State 5>: 8.59ns
The critical path consists of the following:
	'load' operation ('result', global_memory.cpp:30) on array 'global_memory', global_memory.cpp:5 [38]  (3.25 ns)
	'icmp' operation ('tmp_6', global_memory.cpp:37) [40]  (3.26 ns)
	'select' operation ('result', global_memory.cpp:38) [42]  (0 ns)
	'select' operation ('result', global_memory.cpp:16) [44]  (2.07 ns)

 <State 6>: 8.22ns
The critical path consists of the following:
	'add' operation ('result', global_memory.cpp:36) [39]  (2.9 ns)
	'select' operation ('result', global_memory.cpp:16) [48]  (2.07 ns)
	'store' operation (global_memory.cpp:44) of variable 'result', global_memory.cpp:16 on array 'global_memory', global_memory.cpp:5 [49]  (3.25 ns)

 <State 7>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('mem_interfaces_resul', global_memory.cpp:51) [53]  (0 ns)
	'store' operation (global_memory.cpp:51) of variable 'result', global_memory.cpp:16 on array 'mem_interfaces_result' [54]  (2.32 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
