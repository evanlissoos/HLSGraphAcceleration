// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _scheduler_HH_
#define _scheduler_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "scheduler_historybkb.h"
#include "scheduler_queue_ceOg.h"

namespace ap_rtl {

struct scheduler : public sc_module {
    // Port declarations 43
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > sched_interfaces_context_current_node_address0;
    sc_out< sc_logic > sched_interfaces_context_current_node_ce0;
    sc_in< sc_lv<32> > sched_interfaces_context_current_node_q0;
    sc_out< sc_lv<5> > sched_interfaces_context_next_node_address0;
    sc_out< sc_logic > sched_interfaces_context_next_node_ce0;
    sc_in< sc_lv<32> > sched_interfaces_context_next_node_q0;
    sc_out< sc_lv<5> > sched_interfaces_context_state_address0;
    sc_out< sc_logic > sched_interfaces_context_state_ce0;
    sc_in< sc_lv<32> > sched_interfaces_context_state_q0;
    sc_out< sc_lv<5> > sched_interfaces_schedule_V_address0;
    sc_out< sc_logic > sched_interfaces_schedule_V_ce0;
    sc_in< sc_lv<1> > sched_interfaces_schedule_V_q0;
    sc_out< sc_lv<5> > sched_interfaces_ack_V_address0;
    sc_out< sc_logic > sched_interfaces_ack_V_ce0;
    sc_out< sc_logic > sched_interfaces_ack_V_we0;
    sc_out< sc_lv<1> > sched_interfaces_ack_V_d0;
    sc_out< sc_lv<5> > setup_interfaces_context_current_node_address0;
    sc_out< sc_logic > setup_interfaces_context_current_node_ce0;
    sc_out< sc_logic > setup_interfaces_context_current_node_we0;
    sc_out< sc_lv<32> > setup_interfaces_context_current_node_d0;
    sc_out< sc_lv<5> > setup_interfaces_context_next_node_address0;
    sc_out< sc_logic > setup_interfaces_context_next_node_ce0;
    sc_out< sc_logic > setup_interfaces_context_next_node_we0;
    sc_out< sc_lv<32> > setup_interfaces_context_next_node_d0;
    sc_out< sc_lv<5> > setup_interfaces_context_state_address0;
    sc_out< sc_logic > setup_interfaces_context_state_ce0;
    sc_out< sc_logic > setup_interfaces_context_state_we0;
    sc_out< sc_lv<32> > setup_interfaces_context_state_d0;
    sc_out< sc_lv<5> > setup_interfaces_restart_V_address0;
    sc_out< sc_logic > setup_interfaces_restart_V_ce0;
    sc_out< sc_logic > setup_interfaces_restart_V_we0;
    sc_out< sc_lv<1> > setup_interfaces_restart_V_d0;
    sc_out< sc_lv<5> > setup_interfaces_core_halted_V_address0;
    sc_out< sc_logic > setup_interfaces_core_halted_V_ce0;
    sc_in< sc_lv<1> > setup_interfaces_core_halted_V_q0;
    sc_out< sc_lv<32> > finished;
    sc_out< sc_logic > finished_ap_vld;


    // Module declarations
    scheduler(sc_module_name name);
    SC_HAS_PROCESS(scheduler);

    ~scheduler();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    scheduler_historybkb* history_current_node_U;
    scheduler_historybkb* history_next_node_U;
    scheduler_historybkb* history_state_U;
    scheduler_queue_ceOg* queue_current_node_U;
    scheduler_queue_ceOg* queue_next_node_U;
    scheduler_queue_ceOg* queue_state_U;
    sc_signal< sc_lv<13> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > queue_head_ptr_load_reg_682;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<6> > i_2_fu_431_p2;
    sc_signal< sc_lv<6> > i_2_reg_692;
    sc_signal< sc_lv<64> > tmp_fu_437_p1;
    sc_signal< sc_lv<64> > tmp_reg_697;
    sc_signal< sc_lv<1> > exitcond1_fu_425_p2;
    sc_signal< sc_lv<1> > or_cond_fu_452_p2;
    sc_signal< sc_lv<1> > or_cond_reg_717;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > new_context_current_s_reg_736;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > new_context_next_nod_reg_743;
    sc_signal< sc_lv<32> > new_context_state_reg_750;
    sc_signal< sc_lv<13> > j_1_fu_468_p2;
    sc_signal< sc_lv<13> > j_1_reg_760;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > ult_fu_474_p2;
    sc_signal< sc_lv<1> > ult_reg_765;
    sc_signal< sc_lv<1> > exitcond2_fu_462_p2;
    sc_signal< sc_lv<1> > tmp_10_fu_521_p2;
    sc_signal< sc_lv<1> > tmp_10_reg_785;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > tmp_11_fu_526_p2;
    sc_signal< sc_lv<1> > tmp_11_reg_791;
    sc_signal< sc_lv<1> > tmp_12_fu_531_p2;
    sc_signal< sc_lv<1> > tmp_12_reg_796;
    sc_signal< sc_lv<1> > match_found_1_fu_593_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<6> > i_1_fu_605_p2;
    sc_signal< sc_lv<6> > i_1_reg_809;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<64> > tmp_5_fu_611_p1;
    sc_signal< sc_lv<64> > tmp_5_reg_814;
    sc_signal< sc_lv<1> > exitcond_fu_599_p2;
    sc_signal< sc_lv<1> > halted_flag_1_fu_633_p2;
    sc_signal< sc_lv<1> > halted_flag_1_reg_827;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > demorgan_fu_645_p2;
    sc_signal< sc_lv<1> > demorgan_reg_832;
    sc_signal< sc_lv<32> > queue_head_ptr_1_fu_651_p2;
    sc_signal< sc_lv<32> > queue_head_ptr_1_reg_836;
    sc_signal< sc_lv<32> > queue_current_node_q0;
    sc_signal< sc_lv<32> > new_context_current_1_reg_856;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<32> > queue_next_node_q0;
    sc_signal< sc_lv<32> > new_context_next_nod_1_reg_861;
    sc_signal< sc_lv<32> > queue_state_q0;
    sc_signal< sc_lv<32> > new_context_state_1_reg_866;
    sc_signal< sc_lv<12> > history_current_node_address0;
    sc_signal< sc_logic > history_current_node_ce0;
    sc_signal< sc_logic > history_current_node_we0;
    sc_signal< sc_lv<32> > history_current_node_q0;
    sc_signal< sc_lv<12> > history_next_node_address0;
    sc_signal< sc_logic > history_next_node_ce0;
    sc_signal< sc_logic > history_next_node_we0;
    sc_signal< sc_lv<32> > history_next_node_q0;
    sc_signal< sc_lv<12> > history_state_address0;
    sc_signal< sc_logic > history_state_ce0;
    sc_signal< sc_logic > history_state_we0;
    sc_signal< sc_lv<32> > history_state_q0;
    sc_signal< sc_lv<9> > queue_current_node_address0;
    sc_signal< sc_logic > queue_current_node_ce0;
    sc_signal< sc_logic > queue_current_node_we0;
    sc_signal< sc_lv<9> > queue_next_node_address0;
    sc_signal< sc_logic > queue_next_node_ce0;
    sc_signal< sc_logic > queue_next_node_we0;
    sc_signal< sc_lv<9> > queue_state_address0;
    sc_signal< sc_logic > queue_state_ce0;
    sc_signal< sc_logic > queue_state_we0;
    sc_signal< sc_lv<6> > i_reg_349;
    sc_signal< sc_lv<1> > match_found_phi_fu_364_p4;
    sc_signal< sc_lv<1> > match_found_reg_360;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<13> > j_reg_372;
    sc_signal< sc_lv<1> > halted_flag_reg_383;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<6> > i1_reg_395;
    sc_signal< sc_lv<64> > tmp_8_fu_480_p1;
    sc_signal< sc_lv<64> > tmp_s_fu_487_p1;
    sc_signal< sc_lv<64> > tmp_6_fu_493_p1;
    sc_signal< sc_lv<64> > tmp_9_fu_657_p1;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<32> > queue_head_ptr_fu_76;
    sc_signal< sc_lv<32> > queue_head_ptr_3_fu_500_p2;
    sc_signal< sc_lv<32> > history_head_ptr_fu_80;
    sc_signal< sc_lv<32> > history_head_ptr_1_fu_505_p2;
    sc_signal< sc_lv<32> > queue_head_ptr_2_fu_108;
    sc_signal< sc_lv<1> > tmp_1_fu_447_p2;
    sc_signal< sc_lv<32> > j_cast_fu_458_p1;
    sc_signal< sc_lv<1> > rev4_fu_536_p2;
    sc_signal< sc_lv<1> > not_not_fu_547_p2;
    sc_signal< sc_lv<1> > brmerge_fu_541_p2;
    sc_signal< sc_lv<1> > sel_tmp_fu_559_p2;
    sc_signal< sc_lv<1> > tmp1_fu_570_p2;
    sc_signal< sc_lv<1> > tmp9_fu_565_p2;
    sc_signal< sc_lv<1> > match_found_0_mux_fu_553_p2;
    sc_signal< sc_lv<1> > sel_tmp3_fu_574_p2;
    sc_signal< sc_lv<1> > sel_tmp4_fu_580_p3;
    sc_signal< sc_lv<1> > sel_tmp7_demorgan_fu_588_p2;
    sc_signal< sc_lv<1> > tmp_2_fu_616_p2;
    sc_signal< sc_lv<1> > tmp_3_fu_622_p2;
    sc_signal< sc_lv<1> > tmp_7_fu_639_p2;
    sc_signal< sc_lv<13> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<13> ap_ST_fsm_state1;
    static const sc_lv<13> ap_ST_fsm_state2;
    static const sc_lv<13> ap_ST_fsm_state3;
    static const sc_lv<13> ap_ST_fsm_state4;
    static const sc_lv<13> ap_ST_fsm_state5;
    static const sc_lv<13> ap_ST_fsm_state6;
    static const sc_lv<13> ap_ST_fsm_state7;
    static const sc_lv<13> ap_ST_fsm_state8;
    static const sc_lv<13> ap_ST_fsm_state9;
    static const sc_lv<13> ap_ST_fsm_state10;
    static const sc_lv<13> ap_ST_fsm_state11;
    static const sc_lv<13> ap_ST_fsm_state12;
    static const sc_lv<13> ap_ST_fsm_state13;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<32> ap_const_lv32_140;
    static const sc_lv<13> ap_const_lv13_1000;
    static const sc_lv<13> ap_const_lv13_1;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_brmerge_fu_541_p2();
    void thread_demorgan_fu_645_p2();
    void thread_exitcond1_fu_425_p2();
    void thread_exitcond2_fu_462_p2();
    void thread_exitcond_fu_599_p2();
    void thread_finished();
    void thread_finished_ap_vld();
    void thread_halted_flag_1_fu_633_p2();
    void thread_history_current_node_address0();
    void thread_history_current_node_ce0();
    void thread_history_current_node_we0();
    void thread_history_head_ptr_1_fu_505_p2();
    void thread_history_next_node_address0();
    void thread_history_next_node_ce0();
    void thread_history_next_node_we0();
    void thread_history_state_address0();
    void thread_history_state_ce0();
    void thread_history_state_we0();
    void thread_i_1_fu_605_p2();
    void thread_i_2_fu_431_p2();
    void thread_j_1_fu_468_p2();
    void thread_j_cast_fu_458_p1();
    void thread_match_found_0_mux_fu_553_p2();
    void thread_match_found_1_fu_593_p2();
    void thread_match_found_phi_fu_364_p4();
    void thread_not_not_fu_547_p2();
    void thread_or_cond_fu_452_p2();
    void thread_queue_current_node_address0();
    void thread_queue_current_node_ce0();
    void thread_queue_current_node_we0();
    void thread_queue_head_ptr_1_fu_651_p2();
    void thread_queue_head_ptr_3_fu_500_p2();
    void thread_queue_next_node_address0();
    void thread_queue_next_node_ce0();
    void thread_queue_next_node_we0();
    void thread_queue_state_address0();
    void thread_queue_state_ce0();
    void thread_queue_state_we0();
    void thread_rev4_fu_536_p2();
    void thread_sched_interfaces_ack_V_address0();
    void thread_sched_interfaces_ack_V_ce0();
    void thread_sched_interfaces_ack_V_d0();
    void thread_sched_interfaces_ack_V_we0();
    void thread_sched_interfaces_context_current_node_address0();
    void thread_sched_interfaces_context_current_node_ce0();
    void thread_sched_interfaces_context_next_node_address0();
    void thread_sched_interfaces_context_next_node_ce0();
    void thread_sched_interfaces_context_state_address0();
    void thread_sched_interfaces_context_state_ce0();
    void thread_sched_interfaces_schedule_V_address0();
    void thread_sched_interfaces_schedule_V_ce0();
    void thread_sel_tmp3_fu_574_p2();
    void thread_sel_tmp4_fu_580_p3();
    void thread_sel_tmp7_demorgan_fu_588_p2();
    void thread_sel_tmp_fu_559_p2();
    void thread_setup_interfaces_context_current_node_address0();
    void thread_setup_interfaces_context_current_node_ce0();
    void thread_setup_interfaces_context_current_node_d0();
    void thread_setup_interfaces_context_current_node_we0();
    void thread_setup_interfaces_context_next_node_address0();
    void thread_setup_interfaces_context_next_node_ce0();
    void thread_setup_interfaces_context_next_node_d0();
    void thread_setup_interfaces_context_next_node_we0();
    void thread_setup_interfaces_context_state_address0();
    void thread_setup_interfaces_context_state_ce0();
    void thread_setup_interfaces_context_state_d0();
    void thread_setup_interfaces_context_state_we0();
    void thread_setup_interfaces_core_halted_V_address0();
    void thread_setup_interfaces_core_halted_V_ce0();
    void thread_setup_interfaces_restart_V_address0();
    void thread_setup_interfaces_restart_V_ce0();
    void thread_setup_interfaces_restart_V_d0();
    void thread_setup_interfaces_restart_V_we0();
    void thread_tmp1_fu_570_p2();
    void thread_tmp9_fu_565_p2();
    void thread_tmp_10_fu_521_p2();
    void thread_tmp_11_fu_526_p2();
    void thread_tmp_12_fu_531_p2();
    void thread_tmp_1_fu_447_p2();
    void thread_tmp_2_fu_616_p2();
    void thread_tmp_3_fu_622_p2();
    void thread_tmp_5_fu_611_p1();
    void thread_tmp_6_fu_493_p1();
    void thread_tmp_7_fu_639_p2();
    void thread_tmp_8_fu_480_p1();
    void thread_tmp_9_fu_657_p1();
    void thread_tmp_fu_437_p1();
    void thread_tmp_s_fu_487_p1();
    void thread_ult_fu_474_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
