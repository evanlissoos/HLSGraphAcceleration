// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _scheduler_HH_
#define _scheduler_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "scheduler_mux_42_bkb.h"

namespace ap_rtl {

struct scheduler : public sc_module {
    // Port declarations 41
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<1> > sched_interfaces_context_current_node_address0;
    sc_out< sc_logic > sched_interfaces_context_current_node_ce0;
    sc_in< sc_lv<32> > sched_interfaces_context_current_node_q0;
    sc_out< sc_lv<1> > sched_interfaces_context_next_node_address0;
    sc_out< sc_logic > sched_interfaces_context_next_node_ce0;
    sc_in< sc_lv<32> > sched_interfaces_context_next_node_q0;
    sc_out< sc_lv<1> > sched_interfaces_context_state_address0;
    sc_out< sc_logic > sched_interfaces_context_state_ce0;
    sc_in< sc_lv<32> > sched_interfaces_context_state_q0;
    sc_out< sc_lv<1> > sched_interfaces_schedule_V_address0;
    sc_out< sc_logic > sched_interfaces_schedule_V_ce0;
    sc_in< sc_lv<1> > sched_interfaces_schedule_V_q0;
    sc_out< sc_lv<1> > sched_interfaces_ack_V_address0;
    sc_out< sc_logic > sched_interfaces_ack_V_ce0;
    sc_out< sc_logic > sched_interfaces_ack_V_we0;
    sc_out< sc_lv<1> > sched_interfaces_ack_V_d0;
    sc_out< sc_lv<1> > setup_interfaces_context_current_node_address0;
    sc_out< sc_logic > setup_interfaces_context_current_node_ce0;
    sc_out< sc_logic > setup_interfaces_context_current_node_we0;
    sc_out< sc_lv<32> > setup_interfaces_context_current_node_d0;
    sc_out< sc_lv<1> > setup_interfaces_context_next_node_address0;
    sc_out< sc_logic > setup_interfaces_context_next_node_ce0;
    sc_out< sc_logic > setup_interfaces_context_next_node_we0;
    sc_out< sc_lv<32> > setup_interfaces_context_next_node_d0;
    sc_out< sc_lv<1> > setup_interfaces_context_state_address0;
    sc_out< sc_logic > setup_interfaces_context_state_ce0;
    sc_out< sc_logic > setup_interfaces_context_state_we0;
    sc_out< sc_lv<32> > setup_interfaces_context_state_d0;
    sc_out< sc_lv<1> > setup_interfaces_restart_V_address0;
    sc_out< sc_logic > setup_interfaces_restart_V_ce0;
    sc_out< sc_logic > setup_interfaces_restart_V_we0;
    sc_out< sc_lv<1> > setup_interfaces_restart_V_d0;
    sc_out< sc_lv<1> > setup_interfaces_core_halted_V_address0;
    sc_out< sc_logic > setup_interfaces_core_halted_V_ce0;
    sc_in< sc_lv<1> > setup_interfaces_core_halted_V_q0;


    // Module declarations
    scheduler(sc_module_name name);
    SC_HAS_PROCESS(scheduler);

    ~scheduler();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    scheduler_mux_42_bkb<1,1,32,32,32,32,2,32>* scheduler_mux_42_bkb_U1;
    scheduler_mux_42_bkb<1,1,32,32,32,32,2,32>* scheduler_mux_42_bkb_U2;
    scheduler_mux_42_bkb<1,1,32,32,32,32,2,32>* scheduler_mux_42_bkb_U3;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > i_load_reg_791;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > exitcond1_fu_359_p2;
    sc_signal< sc_lv<1> > exitcond1_reg_797;
    sc_signal< sc_lv<64> > tmp_fu_365_p1;
    sc_signal< sc_lv<64> > tmp_reg_801;
    sc_signal< sc_lv<1> > or_cond_5_fu_386_p2;
    sc_signal< sc_lv<1> > or_cond_5_reg_814;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > new_context_current_s_reg_902;
    sc_signal< sc_lv<32> > new_context_next_nod_reg_910;
    sc_signal< sc_lv<32> > new_context_state_2_reg_918;
    sc_signal< sc_lv<2> > i_2_fu_637_p2;
    sc_signal< sc_lv<2> > i_2_reg_929;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<64> > tmp_4_fu_643_p1;
    sc_signal< sc_lv<64> > tmp_4_reg_934;
    sc_signal< sc_lv<1> > exitcond_fu_631_p2;
    sc_signal< sc_lv<32> > new_context_current_1_fu_664_p6;
    sc_signal< sc_lv<32> > new_context_current_1_reg_950;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > demorgan_fu_654_p2;
    sc_signal< sc_lv<32> > new_context_next_nod_1_fu_678_p6;
    sc_signal< sc_lv<32> > new_context_next_nod_1_reg_955;
    sc_signal< sc_lv<32> > new_context_state_fu_692_p6;
    sc_signal< sc_lv<32> > new_context_state_reg_960;
    sc_signal< sc_lv<32> > queue_head_ptr_2_fu_706_p2;
    sc_signal< sc_lv<32> > queue_head_ptr_2_reg_965;
    sc_signal< sc_lv<32> > queue_head_ptr_1_reg_246;
    sc_signal< sc_lv<32> > queue_head_ptr_1_be_phi_fu_272_p4;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > queue_head_ptr_fu_554_p2;
    sc_signal< sc_lv<32> > queue_head_ptr_3_phi_fu_261_p4;
    sc_signal< sc_lv<32> > queue_head_ptr_3_reg_258;
    sc_signal< sc_lv<32> > queue_head_ptr_1_be_reg_268;
    sc_signal< sc_lv<32> > queue_head_ptr_4_reg_280;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<2> > i1_reg_292;
    sc_signal< sc_lv<32> > queue_head_ptr_4_be_reg_303;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > i_fu_72;
    sc_signal< sc_lv<32> > i_1_fu_621_p2;
    sc_signal< sc_lv<32> > queue_3_current_nod_fu_76;
    sc_signal< sc_lv<32> > queue_3_current_nod_12_fu_458_p3;
    sc_signal< sc_lv<32> > queue_3_current_nod_1_fu_80;
    sc_signal< sc_lv<32> > queue_3_current_nod_11_fu_451_p3;
    sc_signal< sc_lv<32> > queue_3_current_nod_2_fu_84;
    sc_signal< sc_lv<32> > queue_3_current_nod_9_fu_438_p3;
    sc_signal< sc_lv<32> > queue_3_current_nod_3_fu_88;
    sc_signal< sc_lv<32> > queue_3_current_nod_8_fu_425_p3;
    sc_signal< sc_lv<32> > queue_3_next_node_2_fu_92;
    sc_signal< sc_lv<32> > queue_3_next_node_7_fu_503_p3;
    sc_signal< sc_lv<32> > queue_3_next_node_3_fu_96;
    sc_signal< sc_lv<32> > queue_3_next_node_5_fu_496_p3;
    sc_signal< sc_lv<32> > queue_3_next_node_6_fu_100;
    sc_signal< sc_lv<32> > queue_3_next_node_1_fu_483_p3;
    sc_signal< sc_lv<32> > queue_3_next_node_8_fu_104;
    sc_signal< sc_lv<32> > queue_3_next_node_fu_470_p3;
    sc_signal< sc_lv<32> > queue_3_state_2_fu_108;
    sc_signal< sc_lv<32> > queue_3_state_7_fu_548_p3;
    sc_signal< sc_lv<32> > queue_3_state_3_fu_112;
    sc_signal< sc_lv<32> > queue_3_state_5_fu_541_p3;
    sc_signal< sc_lv<32> > queue_3_state_6_fu_116;
    sc_signal< sc_lv<32> > queue_3_state_1_fu_528_p3;
    sc_signal< sc_lv<32> > queue_3_state_8_fu_120;
    sc_signal< sc_lv<32> > queue_3_state_fu_515_p3;
    sc_signal< sc_lv<30> > tmp_1_fu_370_p4;
    sc_signal< sc_lv<1> > icmp_fu_380_p2;
    sc_signal< sc_lv<2> > tmp_3_fu_392_p1;
    sc_signal< sc_lv<1> > sel_tmp2_fu_407_p2;
    sc_signal< sc_lv<1> > sel_tmp1_fu_401_p2;
    sc_signal< sc_lv<1> > sel_tmp_fu_395_p2;
    sc_signal< sc_lv<1> > or_cond_fu_413_p2;
    sc_signal< sc_lv<32> > newSel_fu_419_p3;
    sc_signal< sc_lv<32> > newSel2_fu_432_p3;
    sc_signal< sc_lv<32> > queue_3_current_nod_10_fu_445_p3;
    sc_signal< sc_lv<32> > newSel4_fu_464_p3;
    sc_signal< sc_lv<32> > newSel6_fu_477_p3;
    sc_signal< sc_lv<32> > queue_3_next_node_4_fu_490_p3;
    sc_signal< sc_lv<32> > newSel8_fu_509_p3;
    sc_signal< sc_lv<32> > newSel1_fu_522_p3;
    sc_signal< sc_lv<32> > queue_3_state_4_fu_535_p3;
    sc_signal< sc_lv<1> > tmp_5_fu_648_p2;
    sc_signal< sc_lv<2> > tmp_6_fu_660_p1;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<30> ap_const_lv30_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_demorgan_fu_654_p2();
    void thread_exitcond1_fu_359_p2();
    void thread_exitcond_fu_631_p2();
    void thread_i_1_fu_621_p2();
    void thread_i_2_fu_637_p2();
    void thread_icmp_fu_380_p2();
    void thread_newSel1_fu_522_p3();
    void thread_newSel2_fu_432_p3();
    void thread_newSel4_fu_464_p3();
    void thread_newSel6_fu_477_p3();
    void thread_newSel8_fu_509_p3();
    void thread_newSel_fu_419_p3();
    void thread_or_cond_5_fu_386_p2();
    void thread_or_cond_fu_413_p2();
    void thread_queue_3_current_nod_10_fu_445_p3();
    void thread_queue_3_current_nod_11_fu_451_p3();
    void thread_queue_3_current_nod_12_fu_458_p3();
    void thread_queue_3_current_nod_8_fu_425_p3();
    void thread_queue_3_current_nod_9_fu_438_p3();
    void thread_queue_3_next_node_1_fu_483_p3();
    void thread_queue_3_next_node_4_fu_490_p3();
    void thread_queue_3_next_node_5_fu_496_p3();
    void thread_queue_3_next_node_7_fu_503_p3();
    void thread_queue_3_next_node_fu_470_p3();
    void thread_queue_3_state_1_fu_528_p3();
    void thread_queue_3_state_4_fu_535_p3();
    void thread_queue_3_state_5_fu_541_p3();
    void thread_queue_3_state_7_fu_548_p3();
    void thread_queue_3_state_fu_515_p3();
    void thread_queue_head_ptr_1_be_phi_fu_272_p4();
    void thread_queue_head_ptr_2_fu_706_p2();
    void thread_queue_head_ptr_3_phi_fu_261_p4();
    void thread_queue_head_ptr_fu_554_p2();
    void thread_sched_interfaces_ack_V_address0();
    void thread_sched_interfaces_ack_V_ce0();
    void thread_sched_interfaces_ack_V_d0();
    void thread_sched_interfaces_ack_V_we0();
    void thread_sched_interfaces_context_current_node_address0();
    void thread_sched_interfaces_context_current_node_ce0();
    void thread_sched_interfaces_context_next_node_address0();
    void thread_sched_interfaces_context_next_node_ce0();
    void thread_sched_interfaces_context_state_address0();
    void thread_sched_interfaces_context_state_ce0();
    void thread_sched_interfaces_schedule_V_address0();
    void thread_sched_interfaces_schedule_V_ce0();
    void thread_sel_tmp1_fu_401_p2();
    void thread_sel_tmp2_fu_407_p2();
    void thread_sel_tmp_fu_395_p2();
    void thread_setup_interfaces_context_current_node_address0();
    void thread_setup_interfaces_context_current_node_ce0();
    void thread_setup_interfaces_context_current_node_d0();
    void thread_setup_interfaces_context_current_node_we0();
    void thread_setup_interfaces_context_next_node_address0();
    void thread_setup_interfaces_context_next_node_ce0();
    void thread_setup_interfaces_context_next_node_d0();
    void thread_setup_interfaces_context_next_node_we0();
    void thread_setup_interfaces_context_state_address0();
    void thread_setup_interfaces_context_state_ce0();
    void thread_setup_interfaces_context_state_d0();
    void thread_setup_interfaces_context_state_we0();
    void thread_setup_interfaces_core_halted_V_address0();
    void thread_setup_interfaces_core_halted_V_ce0();
    void thread_setup_interfaces_restart_V_address0();
    void thread_setup_interfaces_restart_V_ce0();
    void thread_setup_interfaces_restart_V_d0();
    void thread_setup_interfaces_restart_V_we0();
    void thread_tmp_1_fu_370_p4();
    void thread_tmp_3_fu_392_p1();
    void thread_tmp_4_fu_643_p1();
    void thread_tmp_5_fu_648_p2();
    void thread_tmp_6_fu_660_p1();
    void thread_tmp_fu_365_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
