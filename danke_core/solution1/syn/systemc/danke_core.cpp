// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "danke_core.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic danke_core::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic danke_core::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<56> danke_core::ap_ST_fsm_state1 = "1";
const sc_lv<56> danke_core::ap_ST_fsm_state2 = "10";
const sc_lv<56> danke_core::ap_ST_fsm_state3 = "100";
const sc_lv<56> danke_core::ap_ST_fsm_state4 = "1000";
const sc_lv<56> danke_core::ap_ST_fsm_state5 = "10000";
const sc_lv<56> danke_core::ap_ST_fsm_state6 = "100000";
const sc_lv<56> danke_core::ap_ST_fsm_state7 = "1000000";
const sc_lv<56> danke_core::ap_ST_fsm_state8 = "10000000";
const sc_lv<56> danke_core::ap_ST_fsm_state9 = "100000000";
const sc_lv<56> danke_core::ap_ST_fsm_state10 = "1000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state11 = "10000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state12 = "100000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<56> danke_core::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<32> danke_core::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> danke_core::ap_const_lv32_1 = "1";
const sc_lv<1> danke_core::ap_const_lv1_0 = "0";
const sc_lv<32> danke_core::ap_const_lv32_2 = "10";
const sc_lv<32> danke_core::ap_const_lv32_3 = "11";
const sc_lv<3> danke_core::ap_const_lv3_4 = "100";
const sc_lv<32> danke_core::ap_const_lv32_5 = "101";
const sc_lv<32> danke_core::ap_const_lv32_8 = "1000";
const sc_lv<32> danke_core::ap_const_lv32_9 = "1001";
const sc_lv<32> danke_core::ap_const_lv32_B = "1011";
const sc_lv<32> danke_core::ap_const_lv32_C = "1100";
const sc_lv<32> danke_core::ap_const_lv32_E = "1110";
const sc_lv<4> danke_core::ap_const_lv4_C = "1100";
const sc_lv<4> danke_core::ap_const_lv4_B = "1011";
const sc_lv<4> danke_core::ap_const_lv4_A = "1010";
const sc_lv<4> danke_core::ap_const_lv4_9 = "1001";
const sc_lv<4> danke_core::ap_const_lv4_8 = "1000";
const sc_lv<4> danke_core::ap_const_lv4_7 = "111";
const sc_lv<4> danke_core::ap_const_lv4_6 = "110";
const sc_lv<4> danke_core::ap_const_lv4_5 = "101";
const sc_lv<4> danke_core::ap_const_lv4_4 = "100";
const sc_lv<32> danke_core::ap_const_lv32_32 = "110010";
const sc_lv<32> danke_core::ap_const_lv32_34 = "110100";
const sc_lv<32> danke_core::ap_const_lv32_36 = "110110";
const sc_lv<4> danke_core::ap_const_lv4_1 = "1";
const sc_lv<4> danke_core::ap_const_lv4_0 = "0000";
const sc_lv<32> danke_core::ap_const_lv32_35 = "110101";
const sc_lv<32> danke_core::ap_const_lv32_D = "1101";
const sc_lv<32> danke_core::ap_const_lv32_A = "1010";
const sc_lv<4> danke_core::ap_const_lv4_F = "1111";
const sc_lv<3> danke_core::ap_const_lv3_0 = "000";
const sc_lv<3> danke_core::ap_const_lv3_1 = "1";
const sc_lv<64> danke_core::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> danke_core::ap_const_lv32_4 = "100";
const sc_lv<32> danke_core::ap_const_lv32_6 = "110";
const sc_lv<32> danke_core::ap_const_lv32_37 = "110111";
const sc_lv<3> danke_core::ap_const_lv3_5 = "101";
const sc_lv<3> danke_core::ap_const_lv3_6 = "110";
const sc_lv<3> danke_core::ap_const_lv3_7 = "111";
const sc_lv<32> danke_core::ap_const_lv32_7 = "111";
const sc_lv<1> danke_core::ap_const_lv1_1 = "1";
const sc_lv<32> danke_core::ap_const_lv32_1F = "11111";
const sc_lv<4> danke_core::ap_const_lv4_E = "1110";
const sc_lv<4> danke_core::ap_const_lv4_D = "1101";
const sc_lv<32> danke_core::ap_const_lv32_16 = "10110";
const sc_lv<32> danke_core::ap_const_lv32_18 = "11000";
const sc_lv<32> danke_core::ap_const_lv32_10 = "10000";
const sc_lv<32> danke_core::ap_const_lv32_15 = "10101";
const sc_lv<32> danke_core::ap_const_lv32_F = "1111";
const sc_lv<6> danke_core::ap_const_lv6_20 = "100000";
const sc_lv<3> danke_core::ap_const_lv3_3 = "11";
const sc_lv<10> danke_core::ap_const_lv10_1 = "1";
const sc_lv<32> danke_core::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<32> danke_core::ap_const_lv32_33 = "110011";
const sc_lv<3> danke_core::ap_const_lv3_2 = "10";
const sc_lv<4> danke_core::ap_const_lv4_3 = "11";
const sc_lv<4> danke_core::ap_const_lv4_2 = "10";
const bool danke_core::ap_const_boolean_1 = true;

danke_core::danke_core(sc_module_name name) : sc_module(name), mVcdFile(0) {
    regfile_V_U = new danke_core_regfilbkb("regfile_V_U");
    regfile_V_U->clk(ap_clk);
    regfile_V_U->reset(ap_rst);
    regfile_V_U->address0(regfile_V_address0);
    regfile_V_U->ce0(regfile_V_ce0);
    regfile_V_U->we0(regfile_V_we0);
    regfile_V_U->d0(p_1_reg_245);
    regfile_V_U->q0(regfile_V_q0);
    regfile_V_U->address1(regfile_V_address1);
    regfile_V_U->ce1(regfile_V_ce1);
    regfile_V_U->we1(regfile_V_we1);
    regfile_V_U->d1(data_memory_V_q0);
    regfile_V_U->q1(regfile_V_q1);
    special_regfile_V_U = new danke_core_speciacud("special_regfile_V_U");
    special_regfile_V_U->clk(ap_clk);
    special_regfile_V_U->reset(ap_rst);
    special_regfile_V_U->address0(special_regfile_V_address0);
    special_regfile_V_U->ce0(special_regfile_V_ce0);
    special_regfile_V_U->we0(special_regfile_V_we0);
    special_regfile_V_U->d0(core_id);
    special_regfile_V_U->q0(special_regfile_V_q0);
    special_regfile_V_U->address1(special_regfile_V_address1);
    special_regfile_V_U->ce1(special_regfile_V_ce1);
    special_regfile_V_U->q1(special_regfile_V_q1);
    danke_core_sdiv_3dEe_U1 = new danke_core_sdiv_3dEe<1,36,32,32,32>("danke_core_sdiv_3dEe_U1");
    danke_core_sdiv_3dEe_U1->clk(ap_clk);
    danke_core_sdiv_3dEe_U1->reset(ap_rst);
    danke_core_sdiv_3dEe_U1->start(grp_fu_650_ap_start);
    danke_core_sdiv_3dEe_U1->done(grp_fu_650_ap_done);
    danke_core_sdiv_3dEe_U1->din0(op1_V_reg_749);
    danke_core_sdiv_3dEe_U1->din1(rhs_V_reg_769);
    danke_core_sdiv_3dEe_U1->ce(ap_var_for_const0);
    danke_core_sdiv_3dEe_U1->dout(grp_fu_650_p2);
    danke_core_mul_32eOg_U2 = new danke_core_mul_32eOg<1,2,32,32,32>("danke_core_mul_32eOg_U2");
    danke_core_mul_32eOg_U2->clk(ap_clk);
    danke_core_mul_32eOg_U2->reset(ap_rst);
    danke_core_mul_32eOg_U2->din0(rhs_V_reg_769);
    danke_core_mul_32eOg_U2->din1(op1_V_reg_749);
    danke_core_mul_32eOg_U2->ce(ap_var_for_const0);
    danke_core_mul_32eOg_U2->dout(grp_fu_654_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state52);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state53);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state54);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state55);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state56);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( halted_V_read_read_fu_124_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( halted_V_read_read_fu_124_p2 );

    SC_METHOD(thread_data_memory_V_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_3_fu_536_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_8_fu_541_p1 );

    SC_METHOD(thread_data_memory_V_ce0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_data_memory_V_d0);
    sensitive << ( regfile_V_q0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_data_memory_V_we0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_292_p3);
    sensitive << ( rhs_V_fu_523_p3 );

    SC_METHOD(thread_grp_fu_299_p2);
    sensitive << ( t_V_fu_106 );

    SC_METHOD(thread_grp_fu_310_p2);
    sensitive << ( op1_V_reg_749 );
    sensitive << ( rhs_V_reg_769 );

    SC_METHOD(thread_grp_fu_314_p2);
    sensitive << ( t_V_load_1_reg_677 );

    SC_METHOD(thread_grp_fu_324_p2);
    sensitive << ( intop_V_reg_715 );
    sensitive << ( op1_V_reg_749 );
    sensitive << ( rhs_V_reg_769 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_grp_fu_328_p2);
    sensitive << ( rhs_V_reg_769 );

    SC_METHOD(thread_grp_fu_333_p2);
    sensitive << ( intop_V_reg_715 );
    sensitive << ( op1_V_reg_749 );
    sensitive << ( rhs_V_reg_769 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_grp_fu_650_ap_start);
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_halted_V_o);
    sensitive << ( halted_V_i );
    sensitive << ( opcode_V_reg_693 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_halted_V_o_ap_vld);
    sensitive << ( opcode_V_reg_693 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_halted_V_read_read_fu_124_p2);
    sensitive << ( halted_V_i );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_instruction_memory_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_337_p1 );

    SC_METHOD(thread_instruction_memory_V_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_intop_V_fu_382_p1);
    sensitive << ( instruction_memory_V_q0 );

    SC_METHOD(thread_offset_V_fu_386_p1);
    sensitive << ( instruction_memory_V_q0 );

    SC_METHOD(thread_op1_V_fu_438_p3);
    sensitive << ( tmp_12_reg_724 );
    sensitive << ( regfile_V_q0 );
    sensitive << ( special_regfile_V_q0 );

    SC_METHOD(thread_op2_V_fu_452_p1);
    sensitive << ( sr2_V_reg_703 );

    SC_METHOD(thread_p_0130_0_pn_cast_fu_557_p1);
    sensitive << ( p_0130_0_pn_fu_550_p3 );

    SC_METHOD(thread_p_0130_0_pn_fu_550_p3);
    sensitive << ( offset_V_reg_719 );
    sensitive << ( grp_fu_324_p2 );

    SC_METHOD(thread_pc_V_fu_561_p2);
    sensitive << ( t_V_load_1_reg_677 );
    sensitive << ( p_0130_0_pn_cast_fu_557_p1 );

    SC_METHOD(thread_r_V_1_cast_fu_424_p1);
    sensitive << ( r_V_1_fu_418_p2 );

    SC_METHOD(thread_r_V_1_fu_418_p2);
    sensitive << ( sr2_V_fu_362_p4 );

    SC_METHOD(thread_r_V_4_fu_580_p2);
    sensitive << ( op1_V_reg_749 );
    sensitive << ( rhs_V_reg_769 );

    SC_METHOD(thread_r_V_5_fu_584_p2);
    sensitive << ( op1_V_reg_749 );
    sensitive << ( grp_fu_328_p2 );

    SC_METHOD(thread_r_V_6_fu_571_p2);
    sensitive << ( op1_V_reg_749 );
    sensitive << ( rhs_V_reg_769 );

    SC_METHOD(thread_r_V_7_fu_575_p2);
    sensitive << ( op1_V_reg_749 );
    sensitive << ( grp_fu_328_p2 );

    SC_METHOD(thread_r_V_8_fu_598_p2);
    sensitive << ( op1_V_reg_749 );
    sensitive << ( rhs_V_reg_769 );

    SC_METHOD(thread_r_V_9_fu_594_p2);
    sensitive << ( op1_V_reg_749 );
    sensitive << ( rhs_V_reg_769 );

    SC_METHOD(thread_r_V_cast_fu_404_p1);
    sensitive << ( r_V_fu_398_p2 );

    SC_METHOD(thread_r_V_fu_398_p2);
    sensitive << ( sr1_V_fu_352_p4 );

    SC_METHOD(thread_regfile_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_1_fu_413_p1 );
    sensitive << ( tmp_2_fu_532_p1 );
    sensitive << ( tmp_7_fu_662_p1 );
    sensitive << ( ap_CS_fsm_state56 );

    SC_METHOD(thread_regfile_V_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_5_fu_433_p1 );
    sensitive << ( tmp_9_fu_546_p1 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_regfile_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state56 );

    SC_METHOD(thread_regfile_V_ce1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_regfile_V_we0);
    sensitive << ( opcode_V_reg_693 );
    sensitive << ( ap_CS_fsm_state56 );

    SC_METHOD(thread_regfile_V_we1);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_result_V_12_fu_589_p2);
    sensitive << ( op1_V_reg_749 );

    SC_METHOD(thread_result_V_1_fu_658_p2);
    sensitive << ( op1_V_reg_749 );
    sensitive << ( rhs_V_reg_769 );

    SC_METHOD(thread_result_V_4_fu_646_p1);
    sensitive << ( val_assign_1_fu_642_p2 );

    SC_METHOD(thread_result_V_5_fu_638_p1);
    sensitive << ( grp_fu_333_p2 );

    SC_METHOD(thread_result_V_6_fu_634_p1);
    sensitive << ( rev_fu_628_p2 );

    SC_METHOD(thread_result_V_7_fu_624_p1);
    sensitive << ( rev1_fu_618_p2 );

    SC_METHOD(thread_result_V_8_fu_610_p1);
    sensitive << ( grp_fu_324_p2 );

    SC_METHOD(thread_result_V_9_fu_606_p1);
    sensitive << ( val_assign_6_fu_602_p2 );

    SC_METHOD(thread_rev1_fu_618_p2);
    sensitive << ( slt1_fu_614_p2 );

    SC_METHOD(thread_rev_fu_628_p2);
    sensitive << ( grp_fu_333_p2 );

    SC_METHOD(thread_rhs_V_fu_523_p3);
    sensitive << ( special_regfile_V_q1 );
    sensitive << ( sel_tmp7_fu_517_p2 );
    sensitive << ( sel_tmp5_fu_482_p3 );

    SC_METHOD(thread_sel_tmp1_fu_460_p2);
    sensitive << ( opcode_V_reg_693 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sel_tmp2_fu_465_p2);
    sensitive << ( opcode_V_reg_693 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sel_tmp3_fu_495_p2);
    sensitive << ( opcode_V_reg_693 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sel_tmp4_fu_476_p2);
    sensitive << ( tmp1_fu_470_p2 );
    sensitive << ( sel_tmp_fu_455_p2 );

    SC_METHOD(thread_sel_tmp5_fu_482_p3);
    sensitive << ( regfile_V_q1 );
    sensitive << ( sel_tmp4_fu_476_p2 );
    sensitive << ( op2_V_fu_452_p1 );

    SC_METHOD(thread_sel_tmp6_fu_500_p2);
    sensitive << ( opcode_V_reg_693 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sel_tmp7_fu_517_p2);
    sensitive << ( tmp3_fu_511_p2 );
    sensitive << ( tmp2_fu_505_p2 );

    SC_METHOD(thread_sel_tmp9_fu_490_p2);
    sensitive << ( opcode_V_reg_693 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sel_tmp_fu_455_p2);
    sensitive << ( opcode_V_reg_693 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_slt1_fu_614_p2);
    sensitive << ( intop_V_reg_715 );
    sensitive << ( op1_V_reg_749 );
    sensitive << ( rhs_V_reg_769 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_special_regfile_V_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_s_fu_408_p1 );

    SC_METHOD(thread_special_regfile_V_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_4_fu_428_p1 );

    SC_METHOD(thread_special_regfile_V_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_special_regfile_V_ce1);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_special_regfile_V_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_sr1_V_fu_352_p4);
    sensitive << ( instruction_memory_V_q0 );

    SC_METHOD(thread_sr2_V_fu_362_p4);
    sensitive << ( instruction_memory_V_q0 );

    SC_METHOD(thread_tmp1_fu_470_p2);
    sensitive << ( sel_tmp1_fu_460_p2 );
    sensitive << ( sel_tmp2_fu_465_p2 );

    SC_METHOD(thread_tmp2_fu_505_p2);
    sensitive << ( sel_tmp9_fu_490_p2 );
    sensitive << ( sel_tmp3_fu_495_p2 );

    SC_METHOD(thread_tmp3_fu_511_p2);
    sensitive << ( sel_tmp6_fu_500_p2 );
    sensitive << ( tmp_13_fu_445_p3 );

    SC_METHOD(thread_tmp_13_fu_445_p3);
    sensitive << ( ir_V_reg_688 );

    SC_METHOD(thread_tmp_1_fu_413_p1);
    sensitive << ( sr1_V_fu_352_p4 );

    SC_METHOD(thread_tmp_2_fu_532_p1);
    sensitive << ( dr_V_reg_708 );

    SC_METHOD(thread_tmp_3_fu_536_p1);
    sensitive << ( grp_fu_310_p2 );

    SC_METHOD(thread_tmp_4_fu_428_p1);
    sensitive << ( r_V_1_cast_fu_424_p1 );

    SC_METHOD(thread_tmp_5_fu_433_p1);
    sensitive << ( sr2_V_fu_362_p4 );

    SC_METHOD(thread_tmp_7_fu_662_p1);
    sensitive << ( dr_V_reg_708 );

    SC_METHOD(thread_tmp_8_fu_541_p1);
    sensitive << ( grp_fu_310_p2 );

    SC_METHOD(thread_tmp_9_fu_546_p1);
    sensitive << ( dr_V_reg_708 );

    SC_METHOD(thread_tmp_fu_337_p1);
    sensitive << ( t_V_fu_106 );

    SC_METHOD(thread_tmp_s_fu_408_p1);
    sensitive << ( r_V_cast_fu_404_p1 );

    SC_METHOD(thread_val_assign_1_fu_642_p2);
    sensitive << ( intop_V_reg_715 );
    sensitive << ( op1_V_reg_749 );
    sensitive << ( rhs_V_reg_769 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_val_assign_6_fu_602_p2);
    sensitive << ( intop_V_reg_715 );
    sensitive << ( op1_V_reg_749 );
    sensitive << ( rhs_V_reg_769 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( halted_V_read_read_fu_124_p2 );
    sensitive << ( opcode_V_reg_693 );
    sensitive << ( intop_V_reg_715 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_fu_292_p3 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000000000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "danke_core_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, instruction_memory_V_address0, "(port)instruction_memory_V_address0");
    sc_trace(mVcdFile, instruction_memory_V_ce0, "(port)instruction_memory_V_ce0");
    sc_trace(mVcdFile, instruction_memory_V_q0, "(port)instruction_memory_V_q0");
    sc_trace(mVcdFile, data_memory_V_address0, "(port)data_memory_V_address0");
    sc_trace(mVcdFile, data_memory_V_ce0, "(port)data_memory_V_ce0");
    sc_trace(mVcdFile, data_memory_V_we0, "(port)data_memory_V_we0");
    sc_trace(mVcdFile, data_memory_V_d0, "(port)data_memory_V_d0");
    sc_trace(mVcdFile, data_memory_V_q0, "(port)data_memory_V_q0");
    sc_trace(mVcdFile, halted_V_i, "(port)halted_V_i");
    sc_trace(mVcdFile, halted_V_o, "(port)halted_V_o");
    sc_trace(mVcdFile, halted_V_o_ap_vld, "(port)halted_V_o_ap_vld");
    sc_trace(mVcdFile, core_id, "(port)core_id");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, t_V_load_1_reg_677, "t_V_load_1_reg_677");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, halted_V_read_read_fu_124_p2, "halted_V_read_read_fu_124_p2");
    sc_trace(mVcdFile, ir_V_reg_688, "ir_V_reg_688");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, opcode_V_reg_693, "opcode_V_reg_693");
    sc_trace(mVcdFile, sr2_V_fu_362_p4, "sr2_V_fu_362_p4");
    sc_trace(mVcdFile, sr2_V_reg_703, "sr2_V_reg_703");
    sc_trace(mVcdFile, dr_V_reg_708, "dr_V_reg_708");
    sc_trace(mVcdFile, intop_V_fu_382_p1, "intop_V_fu_382_p1");
    sc_trace(mVcdFile, intop_V_reg_715, "intop_V_reg_715");
    sc_trace(mVcdFile, offset_V_fu_386_p1, "offset_V_fu_386_p1");
    sc_trace(mVcdFile, offset_V_reg_719, "offset_V_reg_719");
    sc_trace(mVcdFile, tmp_12_reg_724, "tmp_12_reg_724");
    sc_trace(mVcdFile, op1_V_fu_438_p3, "op1_V_fu_438_p3");
    sc_trace(mVcdFile, op1_V_reg_749, "op1_V_reg_749");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, rhs_V_fu_523_p3, "rhs_V_fu_523_p3");
    sc_trace(mVcdFile, rhs_V_reg_769, "rhs_V_reg_769");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, r_V_6_fu_571_p2, "r_V_6_fu_571_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, r_V_7_fu_575_p2, "r_V_7_fu_575_p2");
    sc_trace(mVcdFile, r_V_7_reg_808, "r_V_7_reg_808");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, r_V_4_fu_580_p2, "r_V_4_fu_580_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, r_V_5_fu_584_p2, "r_V_5_fu_584_p2");
    sc_trace(mVcdFile, r_V_5_reg_818, "r_V_5_reg_818");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, result_V_12_fu_589_p2, "result_V_12_fu_589_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, r_V_9_fu_594_p2, "r_V_9_fu_594_p2");
    sc_trace(mVcdFile, r_V_8_fu_598_p2, "r_V_8_fu_598_p2");
    sc_trace(mVcdFile, result_V_9_fu_606_p1, "result_V_9_fu_606_p1");
    sc_trace(mVcdFile, result_V_8_fu_610_p1, "result_V_8_fu_610_p1");
    sc_trace(mVcdFile, result_V_7_fu_624_p1, "result_V_7_fu_624_p1");
    sc_trace(mVcdFile, result_V_6_fu_634_p1, "result_V_6_fu_634_p1");
    sc_trace(mVcdFile, result_V_5_fu_638_p1, "result_V_5_fu_638_p1");
    sc_trace(mVcdFile, result_V_4_fu_646_p1, "result_V_4_fu_646_p1");
    sc_trace(mVcdFile, grp_fu_650_p2, "grp_fu_650_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state51, "ap_CS_fsm_state51");
    sc_trace(mVcdFile, grp_fu_654_p2, "grp_fu_654_p2");
    sc_trace(mVcdFile, result_V_2_reg_873, "result_V_2_reg_873");
    sc_trace(mVcdFile, ap_CS_fsm_state53, "ap_CS_fsm_state53");
    sc_trace(mVcdFile, result_V_1_fu_658_p2, "result_V_1_fu_658_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state55, "ap_CS_fsm_state55");
    sc_trace(mVcdFile, grp_fu_310_p2, "grp_fu_310_p2");
    sc_trace(mVcdFile, regfile_V_address0, "regfile_V_address0");
    sc_trace(mVcdFile, regfile_V_ce0, "regfile_V_ce0");
    sc_trace(mVcdFile, regfile_V_we0, "regfile_V_we0");
    sc_trace(mVcdFile, regfile_V_q0, "regfile_V_q0");
    sc_trace(mVcdFile, regfile_V_address1, "regfile_V_address1");
    sc_trace(mVcdFile, regfile_V_ce1, "regfile_V_ce1");
    sc_trace(mVcdFile, regfile_V_we1, "regfile_V_we1");
    sc_trace(mVcdFile, regfile_V_q1, "regfile_V_q1");
    sc_trace(mVcdFile, special_regfile_V_address0, "special_regfile_V_address0");
    sc_trace(mVcdFile, special_regfile_V_ce0, "special_regfile_V_ce0");
    sc_trace(mVcdFile, special_regfile_V_we0, "special_regfile_V_we0");
    sc_trace(mVcdFile, special_regfile_V_q0, "special_regfile_V_q0");
    sc_trace(mVcdFile, special_regfile_V_address1, "special_regfile_V_address1");
    sc_trace(mVcdFile, special_regfile_V_ce1, "special_regfile_V_ce1");
    sc_trace(mVcdFile, special_regfile_V_q1, "special_regfile_V_q1");
    sc_trace(mVcdFile, p_1_reg_245, "p_1_reg_245");
    sc_trace(mVcdFile, ap_CS_fsm_state54, "ap_CS_fsm_state54");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, tmp_fu_337_p1, "tmp_fu_337_p1");
    sc_trace(mVcdFile, tmp_s_fu_408_p1, "tmp_s_fu_408_p1");
    sc_trace(mVcdFile, tmp_1_fu_413_p1, "tmp_1_fu_413_p1");
    sc_trace(mVcdFile, tmp_4_fu_428_p1, "tmp_4_fu_428_p1");
    sc_trace(mVcdFile, tmp_5_fu_433_p1, "tmp_5_fu_433_p1");
    sc_trace(mVcdFile, tmp_2_fu_532_p1, "tmp_2_fu_532_p1");
    sc_trace(mVcdFile, tmp_3_fu_536_p1, "tmp_3_fu_536_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_8_fu_541_p1, "tmp_8_fu_541_p1");
    sc_trace(mVcdFile, tmp_9_fu_546_p1, "tmp_9_fu_546_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_7_fu_662_p1, "tmp_7_fu_662_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state56, "ap_CS_fsm_state56");
    sc_trace(mVcdFile, t_V_fu_106, "t_V_fu_106");
    sc_trace(mVcdFile, grp_fu_299_p2, "grp_fu_299_p2");
    sc_trace(mVcdFile, grp_fu_314_p2, "grp_fu_314_p2");
    sc_trace(mVcdFile, pc_V_fu_561_p2, "pc_V_fu_561_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, sr1_V_fu_352_p4, "sr1_V_fu_352_p4");
    sc_trace(mVcdFile, r_V_fu_398_p2, "r_V_fu_398_p2");
    sc_trace(mVcdFile, r_V_cast_fu_404_p1, "r_V_cast_fu_404_p1");
    sc_trace(mVcdFile, r_V_1_fu_418_p2, "r_V_1_fu_418_p2");
    sc_trace(mVcdFile, r_V_1_cast_fu_424_p1, "r_V_1_cast_fu_424_p1");
    sc_trace(mVcdFile, sel_tmp1_fu_460_p2, "sel_tmp1_fu_460_p2");
    sc_trace(mVcdFile, sel_tmp2_fu_465_p2, "sel_tmp2_fu_465_p2");
    sc_trace(mVcdFile, tmp1_fu_470_p2, "tmp1_fu_470_p2");
    sc_trace(mVcdFile, sel_tmp_fu_455_p2, "sel_tmp_fu_455_p2");
    sc_trace(mVcdFile, sel_tmp4_fu_476_p2, "sel_tmp4_fu_476_p2");
    sc_trace(mVcdFile, op2_V_fu_452_p1, "op2_V_fu_452_p1");
    sc_trace(mVcdFile, sel_tmp9_fu_490_p2, "sel_tmp9_fu_490_p2");
    sc_trace(mVcdFile, sel_tmp3_fu_495_p2, "sel_tmp3_fu_495_p2");
    sc_trace(mVcdFile, sel_tmp6_fu_500_p2, "sel_tmp6_fu_500_p2");
    sc_trace(mVcdFile, tmp_13_fu_445_p3, "tmp_13_fu_445_p3");
    sc_trace(mVcdFile, tmp3_fu_511_p2, "tmp3_fu_511_p2");
    sc_trace(mVcdFile, tmp2_fu_505_p2, "tmp2_fu_505_p2");
    sc_trace(mVcdFile, sel_tmp7_fu_517_p2, "sel_tmp7_fu_517_p2");
    sc_trace(mVcdFile, sel_tmp5_fu_482_p3, "sel_tmp5_fu_482_p3");
    sc_trace(mVcdFile, grp_fu_324_p2, "grp_fu_324_p2");
    sc_trace(mVcdFile, p_0130_0_pn_fu_550_p3, "p_0130_0_pn_fu_550_p3");
    sc_trace(mVcdFile, p_0130_0_pn_cast_fu_557_p1, "p_0130_0_pn_cast_fu_557_p1");
    sc_trace(mVcdFile, grp_fu_328_p2, "grp_fu_328_p2");
    sc_trace(mVcdFile, val_assign_6_fu_602_p2, "val_assign_6_fu_602_p2");
    sc_trace(mVcdFile, slt1_fu_614_p2, "slt1_fu_614_p2");
    sc_trace(mVcdFile, rev1_fu_618_p2, "rev1_fu_618_p2");
    sc_trace(mVcdFile, grp_fu_333_p2, "grp_fu_333_p2");
    sc_trace(mVcdFile, rev_fu_628_p2, "rev_fu_628_p2");
    sc_trace(mVcdFile, val_assign_1_fu_642_p2, "val_assign_1_fu_642_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state52, "ap_CS_fsm_state52");
    sc_trace(mVcdFile, grp_fu_292_p3, "grp_fu_292_p3");
    sc_trace(mVcdFile, grp_fu_650_ap_start, "grp_fu_650_ap_start");
    sc_trace(mVcdFile, grp_fu_650_ap_done, "grp_fu_650_ap_done");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("danke_core.hdltvin.dat");
    mHdltvoutHandle.open("danke_core.hdltvout.dat");
}

danke_core::~danke_core() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete regfile_V_U;
    delete special_regfile_V_U;
    delete danke_core_sdiv_3dEe_U1;
    delete danke_core_mul_32eOg_U2;
}

void danke_core::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void danke_core::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         ((esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_F) && 
           esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_0)) || 
          (esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_F) && 
           esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_1))))) {
        p_1_reg_245 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        p_1_reg_245 = r_V_6_fu_571_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        p_1_reg_245 = r_V_7_reg_808.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        p_1_reg_245 = r_V_4_fu_580_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        p_1_reg_245 = r_V_5_reg_818.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) && 
                esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_0))) {
        p_1_reg_245 = grp_fu_310_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) && 
                esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_1))) {
        p_1_reg_245 = result_V_1_fu_658_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read())) {
        p_1_reg_245 = result_V_2_reg_873.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        p_1_reg_245 = grp_fu_650_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_4))) {
        p_1_reg_245 = result_V_4_fu_646_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_5))) {
        p_1_reg_245 = result_V_5_fu_638_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_6))) {
        p_1_reg_245 = result_V_6_fu_634_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_7))) {
        p_1_reg_245 = result_V_7_fu_624_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_8))) {
        p_1_reg_245 = result_V_8_fu_610_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_9))) {
        p_1_reg_245 = result_V_9_fu_606_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_A))) {
        p_1_reg_245 = r_V_8_fu_598_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_B))) {
        p_1_reg_245 = r_V_9_fu_594_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_C))) {
        p_1_reg_245 = result_V_12_fu_589_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        t_V_fu_106 = pc_V_fu_561_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        t_V_fu_106 = grp_fu_314_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) && 
                 (esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_0) || 
                  esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_1))) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                 (esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_5) || 
                  esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_6) || 
                  esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_7))))) {
        t_V_fu_106 = grp_fu_299_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        dr_V_reg_708 = instruction_memory_V_q0.read().range(9, 4);
        intop_V_reg_715 = intop_V_fu_382_p1.read();
        ir_V_reg_688 = instruction_memory_V_q0.read();
        offset_V_reg_719 = offset_V_fu_386_p1.read();
        opcode_V_reg_693 = instruction_memory_V_q0.read().range(24, 22);
        sr2_V_reg_703 = instruction_memory_V_q0.read().range(15, 10);
        tmp_12_reg_724 = instruction_memory_V_q0.read().range(21, 21);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        op1_V_reg_749 = op1_V_fu_438_p3.read();
        rhs_V_reg_769 = rhs_V_fu_523_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        r_V_5_reg_818 = r_V_5_fu_584_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        r_V_7_reg_808 = r_V_7_fu_575_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read())) {
        result_V_2_reg_873 = grp_fu_654_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(halted_V_read_read_fu_124_p2.read(), ap_const_lv1_0))) {
        t_V_load_1_reg_677 = t_V_fu_106.read();
    }
}

void danke_core::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void danke_core::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void danke_core::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void danke_core::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void danke_core::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void danke_core::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void danke_core::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void danke_core::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void danke_core::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void danke_core::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void danke_core::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void danke_core::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void danke_core::thread_ap_CS_fsm_state51() {
    ap_CS_fsm_state51 = ap_CS_fsm.read()[50];
}

void danke_core::thread_ap_CS_fsm_state52() {
    ap_CS_fsm_state52 = ap_CS_fsm.read()[51];
}

void danke_core::thread_ap_CS_fsm_state53() {
    ap_CS_fsm_state53 = ap_CS_fsm.read()[52];
}

void danke_core::thread_ap_CS_fsm_state54() {
    ap_CS_fsm_state54 = ap_CS_fsm.read()[53];
}

void danke_core::thread_ap_CS_fsm_state55() {
    ap_CS_fsm_state55 = ap_CS_fsm.read()[54];
}

void danke_core::thread_ap_CS_fsm_state56() {
    ap_CS_fsm_state56 = ap_CS_fsm.read()[55];
}

void danke_core::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void danke_core::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void danke_core::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void danke_core::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void danke_core::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(halted_V_read_read_fu_124_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void danke_core::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void danke_core::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(halted_V_read_read_fu_124_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void danke_core::thread_data_memory_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        data_memory_V_address0 =  (sc_lv<10>) (tmp_8_fu_541_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        data_memory_V_address0 =  (sc_lv<10>) (tmp_3_fu_536_p1.read());
    } else {
        data_memory_V_address0 = "XXXXXXXXXX";
    }
}

void danke_core::thread_data_memory_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        data_memory_V_ce0 = ap_const_logic_1;
    } else {
        data_memory_V_ce0 = ap_const_logic_0;
    }
}

void danke_core::thread_data_memory_V_d0() {
    data_memory_V_d0 = regfile_V_q0.read();
}

void danke_core::thread_data_memory_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        data_memory_V_we0 = ap_const_logic_1;
    } else {
        data_memory_V_we0 = ap_const_logic_0;
    }
}

void danke_core::thread_grp_fu_292_p3() {
    grp_fu_292_p3 = rhs_V_fu_523_p3.read().range(31, 31);
}

void danke_core::thread_grp_fu_299_p2() {
    grp_fu_299_p2 = (!t_V_fu_106.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(t_V_fu_106.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void danke_core::thread_grp_fu_310_p2() {
    grp_fu_310_p2 = (!rhs_V_reg_769.read().is_01() || !op1_V_reg_749.read().is_01())? sc_lv<32>(): (sc_bigint<32>(rhs_V_reg_769.read()) + sc_bigint<32>(op1_V_reg_749.read()));
}

void danke_core::thread_grp_fu_314_p2() {
    grp_fu_314_p2 = (!t_V_load_1_reg_677.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(t_V_load_1_reg_677.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void danke_core::thread_grp_fu_324_p2() {
    grp_fu_324_p2 = (!op1_V_reg_749.read().is_01() || !rhs_V_reg_769.read().is_01())? sc_lv<1>(): sc_lv<1>(op1_V_reg_749.read() == rhs_V_reg_769.read());
}

void danke_core::thread_grp_fu_328_p2() {
    grp_fu_328_p2 = (!ap_const_lv32_0.is_01() || !rhs_V_reg_769.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_bigint<32>(rhs_V_reg_769.read()));
}

void danke_core::thread_grp_fu_333_p2() {
    grp_fu_333_p2 = (!op1_V_reg_749.read().is_01() || !rhs_V_reg_769.read().is_01())? sc_lv<1>(): (sc_bigint<32>(op1_V_reg_749.read()) < sc_bigint<32>(rhs_V_reg_769.read()));
}

void danke_core::thread_grp_fu_650_ap_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_650_ap_start = ap_const_logic_1;
    } else {
        grp_fu_650_ap_start = ap_const_logic_0;
    }
}

void danke_core::thread_halted_V_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         (esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_5) || 
          esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_6)))) {
        halted_V_o = ap_const_lv1_1;
    } else {
        halted_V_o = halted_V_i.read();
    }
}

void danke_core::thread_halted_V_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         (esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_5) || 
          esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_6)))) {
        halted_V_o_ap_vld = ap_const_logic_1;
    } else {
        halted_V_o_ap_vld = ap_const_logic_0;
    }
}

void danke_core::thread_halted_V_read_read_fu_124_p2() {
    halted_V_read_read_fu_124_p2 = halted_V_i.read();
}

void danke_core::thread_instruction_memory_V_address0() {
    instruction_memory_V_address0 =  (sc_lv<10>) (tmp_fu_337_p1.read());
}

void danke_core::thread_instruction_memory_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        instruction_memory_V_ce0 = ap_const_logic_1;
    } else {
        instruction_memory_V_ce0 = ap_const_logic_0;
    }
}

void danke_core::thread_intop_V_fu_382_p1() {
    intop_V_fu_382_p1 = instruction_memory_V_q0.read().range(4-1, 0);
}

void danke_core::thread_offset_V_fu_386_p1() {
    offset_V_fu_386_p1 = instruction_memory_V_q0.read().range(10-1, 0);
}

void danke_core::thread_op1_V_fu_438_p3() {
    op1_V_fu_438_p3 = (!tmp_12_reg_724.read()[0].is_01())? sc_lv<32>(): ((tmp_12_reg_724.read()[0].to_bool())? special_regfile_V_q0.read(): regfile_V_q0.read());
}

void danke_core::thread_op2_V_fu_452_p1() {
    op2_V_fu_452_p1 = esl_sext<32,6>(sr2_V_reg_703.read());
}

void danke_core::thread_p_0130_0_pn_cast_fu_557_p1() {
    p_0130_0_pn_cast_fu_557_p1 = esl_sext<32,10>(p_0130_0_pn_fu_550_p3.read());
}

void danke_core::thread_p_0130_0_pn_fu_550_p3() {
    p_0130_0_pn_fu_550_p3 = (!grp_fu_324_p2.read()[0].is_01())? sc_lv<10>(): ((grp_fu_324_p2.read()[0].to_bool())? offset_V_reg_719.read(): ap_const_lv10_1);
}

void danke_core::thread_pc_V_fu_561_p2() {
    pc_V_fu_561_p2 = (!p_0130_0_pn_cast_fu_557_p1.read().is_01() || !t_V_load_1_reg_677.read().is_01())? sc_lv<32>(): (sc_bigint<32>(p_0130_0_pn_cast_fu_557_p1.read()) + sc_biguint<32>(t_V_load_1_reg_677.read()));
}

void danke_core::thread_r_V_1_cast_fu_424_p1() {
    r_V_1_cast_fu_424_p1 = esl_sext<33,6>(r_V_1_fu_418_p2.read());
}

void danke_core::thread_r_V_1_fu_418_p2() {
    r_V_1_fu_418_p2 = (sr2_V_fu_362_p4.read() ^ ap_const_lv6_20);
}

void danke_core::thread_r_V_4_fu_580_p2() {
    r_V_4_fu_580_p2 = (!rhs_V_reg_769.read().is_01())? sc_lv<32>(): op1_V_reg_749.read() << (unsigned short)rhs_V_reg_769.read().to_uint();
}

void danke_core::thread_r_V_5_fu_584_p2() {
    r_V_5_fu_584_p2 = (!op1_V_reg_749.read().is_01() || !grp_fu_328_p2.read().is_01())? sc_lv<32>(): sc_bigint<32>(op1_V_reg_749.read()) >> (unsigned short)grp_fu_328_p2.read().to_uint();
}

void danke_core::thread_r_V_6_fu_571_p2() {
    r_V_6_fu_571_p2 = (!op1_V_reg_749.read().is_01() || !rhs_V_reg_769.read().is_01())? sc_lv<32>(): sc_bigint<32>(op1_V_reg_749.read()) >> (unsigned short)rhs_V_reg_769.read().to_uint();
}

void danke_core::thread_r_V_7_fu_575_p2() {
    r_V_7_fu_575_p2 = (!grp_fu_328_p2.read().is_01())? sc_lv<32>(): op1_V_reg_749.read() << (unsigned short)grp_fu_328_p2.read().to_uint();
}

void danke_core::thread_r_V_8_fu_598_p2() {
    r_V_8_fu_598_p2 = (rhs_V_reg_769.read() & op1_V_reg_749.read());
}

void danke_core::thread_r_V_9_fu_594_p2() {
    r_V_9_fu_594_p2 = (rhs_V_reg_769.read() | op1_V_reg_749.read());
}

void danke_core::thread_r_V_cast_fu_404_p1() {
    r_V_cast_fu_404_p1 = esl_sext<33,6>(r_V_fu_398_p2.read());
}

void danke_core::thread_r_V_fu_398_p2() {
    r_V_fu_398_p2 = (sr1_V_fu_352_p4.read() ^ ap_const_lv6_20);
}

void danke_core::thread_regfile_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read())) {
        regfile_V_address0 =  (sc_lv<5>) (tmp_7_fu_662_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        regfile_V_address0 =  (sc_lv<5>) (tmp_2_fu_532_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        regfile_V_address0 =  (sc_lv<5>) (tmp_1_fu_413_p1.read());
    } else {
        regfile_V_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void danke_core::thread_regfile_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        regfile_V_address1 =  (sc_lv<5>) (tmp_9_fu_546_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        regfile_V_address1 =  (sc_lv<5>) (tmp_5_fu_433_p1.read());
    } else {
        regfile_V_address1 =  (sc_lv<5>) ("XXXXX");
    }
}

void danke_core::thread_regfile_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()))) {
        regfile_V_ce0 = ap_const_logic_1;
    } else {
        regfile_V_ce0 = ap_const_logic_0;
    }
}

void danke_core::thread_regfile_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        regfile_V_ce1 = ap_const_logic_1;
    } else {
        regfile_V_ce1 = ap_const_logic_0;
    }
}

void danke_core::thread_regfile_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) && 
         (esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_0) || 
          esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_1)))) {
        regfile_V_we0 = ap_const_logic_1;
    } else {
        regfile_V_we0 = ap_const_logic_0;
    }
}

void danke_core::thread_regfile_V_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        regfile_V_we1 = ap_const_logic_1;
    } else {
        regfile_V_we1 = ap_const_logic_0;
    }
}

void danke_core::thread_result_V_12_fu_589_p2() {
    result_V_12_fu_589_p2 = (op1_V_reg_749.read() ^ ap_const_lv32_FFFFFFFF);
}

void danke_core::thread_result_V_1_fu_658_p2() {
    result_V_1_fu_658_p2 = (!op1_V_reg_749.read().is_01() || !rhs_V_reg_769.read().is_01())? sc_lv<32>(): (sc_bigint<32>(op1_V_reg_749.read()) - sc_bigint<32>(rhs_V_reg_769.read()));
}

void danke_core::thread_result_V_4_fu_646_p1() {
    result_V_4_fu_646_p1 = esl_zext<32,1>(val_assign_1_fu_642_p2.read());
}

void danke_core::thread_result_V_5_fu_638_p1() {
    result_V_5_fu_638_p1 = esl_zext<32,1>(grp_fu_333_p2.read());
}

void danke_core::thread_result_V_6_fu_634_p1() {
    result_V_6_fu_634_p1 = esl_zext<32,1>(rev_fu_628_p2.read());
}

void danke_core::thread_result_V_7_fu_624_p1() {
    result_V_7_fu_624_p1 = esl_zext<32,1>(rev1_fu_618_p2.read());
}

void danke_core::thread_result_V_8_fu_610_p1() {
    result_V_8_fu_610_p1 = esl_zext<32,1>(grp_fu_324_p2.read());
}

void danke_core::thread_result_V_9_fu_606_p1() {
    result_V_9_fu_606_p1 = esl_zext<32,1>(val_assign_6_fu_602_p2.read());
}

void danke_core::thread_rev1_fu_618_p2() {
    rev1_fu_618_p2 = (slt1_fu_614_p2.read() ^ ap_const_lv1_1);
}

void danke_core::thread_rev_fu_628_p2() {
    rev_fu_628_p2 = (grp_fu_333_p2.read() ^ ap_const_lv1_1);
}

void danke_core::thread_rhs_V_fu_523_p3() {
    rhs_V_fu_523_p3 = (!sel_tmp7_fu_517_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp7_fu_517_p2.read()[0].to_bool())? special_regfile_V_q1.read(): sel_tmp5_fu_482_p3.read());
}

void danke_core::thread_sel_tmp1_fu_460_p2() {
    sel_tmp1_fu_460_p2 = (!opcode_V_reg_693.read().is_01() || !ap_const_lv3_3.is_01())? sc_lv<1>(): sc_lv<1>(opcode_V_reg_693.read() == ap_const_lv3_3);
}

void danke_core::thread_sel_tmp2_fu_465_p2() {
    sel_tmp2_fu_465_p2 = (!opcode_V_reg_693.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<1>(): sc_lv<1>(opcode_V_reg_693.read() == ap_const_lv3_1);
}

void danke_core::thread_sel_tmp3_fu_495_p2() {
    sel_tmp3_fu_495_p2 = (!opcode_V_reg_693.read().is_01() || !ap_const_lv3_3.is_01())? sc_lv<1>(): sc_lv<1>(opcode_V_reg_693.read() != ap_const_lv3_3);
}

void danke_core::thread_sel_tmp4_fu_476_p2() {
    sel_tmp4_fu_476_p2 = (tmp1_fu_470_p2.read() | sel_tmp_fu_455_p2.read());
}

void danke_core::thread_sel_tmp5_fu_482_p3() {
    sel_tmp5_fu_482_p3 = (!sel_tmp4_fu_476_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp4_fu_476_p2.read()[0].to_bool())? op2_V_fu_452_p1.read(): regfile_V_q1.read());
}

void danke_core::thread_sel_tmp6_fu_500_p2() {
    sel_tmp6_fu_500_p2 = (!opcode_V_reg_693.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<1>(): sc_lv<1>(opcode_V_reg_693.read() != ap_const_lv3_1);
}

void danke_core::thread_sel_tmp7_fu_517_p2() {
    sel_tmp7_fu_517_p2 = (tmp3_fu_511_p2.read() & tmp2_fu_505_p2.read());
}

void danke_core::thread_sel_tmp9_fu_490_p2() {
    sel_tmp9_fu_490_p2 = (!opcode_V_reg_693.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(opcode_V_reg_693.read() != ap_const_lv3_4);
}

void danke_core::thread_sel_tmp_fu_455_p2() {
    sel_tmp_fu_455_p2 = (!opcode_V_reg_693.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(opcode_V_reg_693.read() == ap_const_lv3_4);
}

void danke_core::thread_slt1_fu_614_p2() {
    slt1_fu_614_p2 = (!rhs_V_reg_769.read().is_01() || !op1_V_reg_749.read().is_01())? sc_lv<1>(): (sc_bigint<32>(rhs_V_reg_769.read()) < sc_bigint<32>(op1_V_reg_749.read()));
}

void danke_core::thread_special_regfile_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        special_regfile_V_address0 =  (sc_lv<5>) (tmp_s_fu_408_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        special_regfile_V_address0 =  (sc_lv<5>) (ap_const_lv64_0);
    } else {
        special_regfile_V_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void danke_core::thread_special_regfile_V_address1() {
    special_regfile_V_address1 =  (sc_lv<5>) (tmp_4_fu_428_p1.read());
}

void danke_core::thread_special_regfile_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)))) {
        special_regfile_V_ce0 = ap_const_logic_1;
    } else {
        special_regfile_V_ce0 = ap_const_logic_0;
    }
}

void danke_core::thread_special_regfile_V_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        special_regfile_V_ce1 = ap_const_logic_1;
    } else {
        special_regfile_V_ce1 = ap_const_logic_0;
    }
}

void danke_core::thread_special_regfile_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        special_regfile_V_we0 = ap_const_logic_1;
    } else {
        special_regfile_V_we0 = ap_const_logic_0;
    }
}

void danke_core::thread_sr1_V_fu_352_p4() {
    sr1_V_fu_352_p4 = instruction_memory_V_q0.read().range(21, 16);
}

void danke_core::thread_sr2_V_fu_362_p4() {
    sr2_V_fu_362_p4 = instruction_memory_V_q0.read().range(15, 10);
}

void danke_core::thread_tmp1_fu_470_p2() {
    tmp1_fu_470_p2 = (sel_tmp1_fu_460_p2.read() | sel_tmp2_fu_465_p2.read());
}

void danke_core::thread_tmp2_fu_505_p2() {
    tmp2_fu_505_p2 = (sel_tmp9_fu_490_p2.read() & sel_tmp3_fu_495_p2.read());
}

void danke_core::thread_tmp3_fu_511_p2() {
    tmp3_fu_511_p2 = (sel_tmp6_fu_500_p2.read() & tmp_13_fu_445_p3.read());
}

void danke_core::thread_tmp_13_fu_445_p3() {
    tmp_13_fu_445_p3 = ir_V_reg_688.read().range(15, 15);
}

void danke_core::thread_tmp_1_fu_413_p1() {
    tmp_1_fu_413_p1 = esl_zext<64,6>(sr1_V_fu_352_p4.read());
}

void danke_core::thread_tmp_2_fu_532_p1() {
    tmp_2_fu_532_p1 = esl_zext<64,6>(dr_V_reg_708.read());
}

void danke_core::thread_tmp_3_fu_536_p1() {
    tmp_3_fu_536_p1 = esl_sext<64,32>(grp_fu_310_p2.read());
}

void danke_core::thread_tmp_4_fu_428_p1() {
    tmp_4_fu_428_p1 = esl_zext<64,33>(r_V_1_cast_fu_424_p1.read());
}

void danke_core::thread_tmp_5_fu_433_p1() {
    tmp_5_fu_433_p1 = esl_zext<64,6>(sr2_V_fu_362_p4.read());
}

void danke_core::thread_tmp_7_fu_662_p1() {
    tmp_7_fu_662_p1 = esl_zext<64,6>(dr_V_reg_708.read());
}

void danke_core::thread_tmp_8_fu_541_p1() {
    tmp_8_fu_541_p1 = esl_sext<64,32>(grp_fu_310_p2.read());
}

void danke_core::thread_tmp_9_fu_546_p1() {
    tmp_9_fu_546_p1 = esl_zext<64,6>(dr_V_reg_708.read());
}

void danke_core::thread_tmp_fu_337_p1() {
    tmp_fu_337_p1 = esl_sext<64,32>(t_V_fu_106.read());
}

void danke_core::thread_tmp_s_fu_408_p1() {
    tmp_s_fu_408_p1 = esl_zext<64,33>(r_V_cast_fu_404_p1.read());
}

void danke_core::thread_val_assign_1_fu_642_p2() {
    val_assign_1_fu_642_p2 = (!op1_V_reg_749.read().is_01() || !rhs_V_reg_769.read().is_01())? sc_lv<1>(): (sc_bigint<32>(op1_V_reg_749.read()) > sc_bigint<32>(rhs_V_reg_769.read()));
}

void danke_core::thread_val_assign_6_fu_602_p2() {
    val_assign_6_fu_602_p2 = (!op1_V_reg_749.read().is_01() || !rhs_V_reg_769.read().is_01())? sc_lv<1>(): sc_lv<1>(op1_V_reg_749.read() != rhs_V_reg_769.read());
}

void danke_core::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(halted_V_read_read_fu_124_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && ((esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_0) && 
   esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_D) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_292_p3.read())) || 
  (esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_1) && 
   esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_D) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_292_p3.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && ((esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_0) && 
   esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_D) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_292_p3.read())) || 
  (esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_1) && 
   esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_D) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_292_p3.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && ((esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_0) && 
   esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_E) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_292_p3.read())) || 
  (esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_1) && 
   esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_E) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_292_p3.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && ((esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_0) && 
   esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_E) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_292_p3.read())) || 
  (esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_1) && 
   esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_E) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_292_p3.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && ((esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_F) && 
   esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_0)) || 
  (esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_F) && 
   esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_1)) || 
  esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_5) || 
  esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_6) || 
  esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_7)))) {
                ap_NS_fsm = ap_ST_fsm_state56;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && ((esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_0) && 
   esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_0)) || 
  (esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_1) && 
   esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_0)) || 
  (esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_0) && 
   esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_1)) || 
  (esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_1) && 
   esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_1))))) {
                ap_NS_fsm = ap_ST_fsm_state55;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && ((esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_0) && 
   esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_2)) || 
  (esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_1) && 
   esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_2))))) {
                ap_NS_fsm = ap_ST_fsm_state52;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && ((esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_0) && 
   esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_3)) || 
  (esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_1) && 
   esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_3))))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && ((esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_4) && 
   esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_0)) || 
  (esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_5) && 
   esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_0)) || 
  (esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_4) && 
   esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_1)) || 
  (esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_6) && 
   esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_0)) || 
  (esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_5) && 
   esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_1)) || 
  (esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_7) && 
   esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_0)) || 
  (esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_6) && 
   esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_1)) || 
  (esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_8) && 
   esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_0)) || 
  (esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_7) && 
   esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_1)) || 
  (esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_9) && 
   esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_0)) || 
  (esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_8) && 
   esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_1)) || 
  (esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_A) && 
   esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_0)) || 
  (esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_9) && 
   esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_1)) || 
  (esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_B) && 
   esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_0)) || 
  (esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_A) && 
   esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_1)) || 
  (esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_C) && 
   esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_0)) || 
  (esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_B) && 
   esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_1)) || 
  (esl_seteq<1,4,4>(intop_V_reg_715.read(), ap_const_lv4_C) && 
   esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_1))))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_2))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,3,3>(opcode_V_reg_693.read(), ap_const_lv3_3))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state56;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state56;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state56;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state56;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state56;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state56;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state56;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state56;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state42;
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_fsm_state43;
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_fsm_state44;
            break;
        case 8796093022208 : 
            ap_NS_fsm = ap_ST_fsm_state45;
            break;
        case 17592186044416 : 
            ap_NS_fsm = ap_ST_fsm_state46;
            break;
        case 35184372088832 : 
            ap_NS_fsm = ap_ST_fsm_state47;
            break;
        case 70368744177664 : 
            ap_NS_fsm = ap_ST_fsm_state48;
            break;
        case 140737488355328 : 
            ap_NS_fsm = ap_ST_fsm_state49;
            break;
        case 281474976710656 : 
            ap_NS_fsm = ap_ST_fsm_state50;
            break;
        case 562949953421312 : 
            ap_NS_fsm = ap_ST_fsm_state51;
            break;
        case 1125899906842624 : 
            ap_NS_fsm = ap_ST_fsm_state56;
            break;
        case 2251799813685248 : 
            ap_NS_fsm = ap_ST_fsm_state53;
            break;
        case 4503599627370496 : 
            ap_NS_fsm = ap_ST_fsm_state54;
            break;
        case 9007199254740992 : 
            ap_NS_fsm = ap_ST_fsm_state56;
            break;
        case 18014398509481984 : 
            ap_NS_fsm = ap_ST_fsm_state56;
            break;
        case 36028797018963968 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<56>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void danke_core::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"instruction_memory_V_address0\" :  \"" << instruction_memory_V_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"instruction_memory_V_ce0\" :  \"" << instruction_memory_V_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"instruction_memory_V_q0\" :  \"" << instruction_memory_V_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_memory_V_address0\" :  \"" << data_memory_V_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_memory_V_ce0\" :  \"" << data_memory_V_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_memory_V_we0\" :  \"" << data_memory_V_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_memory_V_d0\" :  \"" << data_memory_V_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_memory_V_q0\" :  \"" << data_memory_V_q0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"halted_V_i\" :  \"" << halted_V_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"halted_V_o\" :  \"" << halted_V_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"halted_V_o_ap_vld\" :  \"" << halted_V_o_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"core_id\" :  \"" << core_id.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

